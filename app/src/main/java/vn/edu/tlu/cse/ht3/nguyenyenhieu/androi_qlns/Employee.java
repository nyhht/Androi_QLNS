package vn.edu.tlu.cse.ht3.nguyenyenhieu.androi_qlns;

import java.text.DecimalFormat;

public class Employee {
    private int id;
    private String name;
    private String position;
    private int daysOff;
    private double baseSalary;
    private double totalSalary;

    public Employee(int id, String name, String position, int daysOff, double baseSalary, double totalSalary) {
        this.id = id;
        this.name = name;
        this.position = position;
        this.daysOff = daysOff;
        this.baseSalary = baseSalary;
        this.totalSalary = totalSalary;
    }

    // Constructor without ID, useful for inserting new employees (ID will be auto-generated by DB)
    public Employee(String name, String position, int daysOff, double baseSalary, double totalSalary) {
        this.name = name;
        this.position = position;
        this.daysOff = daysOff;
        this.baseSalary = baseSalary;
        this.totalSalary = totalSalary;
    }

    // Getters
    public int getId() {
        return id;
    }

    public String getName() {
        return name;
    }

    public String getPosition() {
        return position;
    }

    public int getDaysOff() {
        return daysOff;
    }

    public double getBaseSalary() {
        return baseSalary;
    }

    public double getTotalSalary() {
        return totalSalary;
    }

    // Setters (if you need to update employee data in memory)
    public void setId(int id) {
        this.id = id;
    }

    public void setName(String name) {
        this.name = name;
    }

    public void setPosition(String position) {
        this.position = position;
    }

    public void setDaysOff(int daysOff) {
        this.daysOff = daysOff;
    }

    public void setBaseSalary(double baseSalary) {
        this.baseSalary = baseSalary;
    }

    public void setTotalSalary(double totalSalary) {
        this.totalSalary = totalSalary;
    }

    // Helper method to format currency (for display)
    public String getFormattedSalary(double salary) {
        DecimalFormat formatter = new DecimalFormat("#,###"); // Định dạng có dấu phẩy
        return formatter.format(salary);
    }
}